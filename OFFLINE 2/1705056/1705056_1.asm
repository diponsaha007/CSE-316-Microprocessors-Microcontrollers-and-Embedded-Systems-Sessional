.MODEL SMALL


.STACK 100H


.DATA
	CR EQU 0DH
	LF EQU 0AH
	
	MSG DB 'All the numbers are equal$'
	X DB ?
	Y DB ?
	Z DB ?
	MAX DB ?
	SMAX DB 0
	

.CODE

MAIN PROC
	;DATA SEGMENT INITIALIZATION
    MOV AX, @DATA
    MOV DS, AX
        
    ;INPUT X
	MOV AH, 1
    INT 21H
    SUB AL, 48
    MOV X, AL
	
	;PRINT NEW LINE
	MOV AH, 2
	MOV DL , LF
	INT 21H
	MOV DL , CR
	INT 21H
	
	;INPUT Y
	MOV AH, 1
    INT 21H
    SUB AL, 48
    MOV Y, AL
	
	;PRINT NEW LINE
	MOV AH, 2
	MOV DL , LF
	INT 21H
	MOV DL , CR
	INT 21H
	
	;INPUT Z
	MOV AH, 1
    INT 21H
    SUB AL, 48
    MOV Z, AL
	
	;PRINT NEW LINE
	MOV AH, 2
	MOV DL , LF
	INT 21H
	MOV DL , CR
	INT 21H
	
	
	;ALL EQUAL CASE X== Y && Y==Z
	MOV AL,Y
	CMP AL ,X
	JNE CAL
	CMP AL ,Z
	JNE CAL
	
	LEA DX, MSG
    MOV AH, 9
    INT 21H
	JMP END_CASE
CAL:
	;MAX = X
	MOV AL , X
	MOV MAX, AL
	;IF(Y>MAX) SMAX = MAX , MAX = Y ELSE IF(Y<MAX AND Y > SMAX) SMAX = Y
	MOV AL , Y
	CMP AL , MAX
	JG CASE1
	CMP AL , MAX
	JGE COMPZ
	CMP AL ,SMAX
	JLE COMPZ
	MOV SMAX , AL
	JMP COMPZ
CASE1:
	MOV BL , MAX
	MOV SMAX , BL
	MOV MAX, AL
COMPZ:
	MOV AL , Z
	CMP AL , MAX
	JG CASE2
	CMP AL , MAX
	JGE DISPLAY
	CMP AL ,SMAX
	JLE DISPLAY
	MOV SMAX , AL
	JMP DISPLAY
CASE2:
	MOV BL , MAX
	MOV SMAX , BL
	MOV MAX, AL
DISPLAY:
    ADD SMAX , 48
	MOV AH, 2
	MOV DL, SMAX
	INT 21H
END_CASE:
    ;DOS EXIT
    MOV AH, 4CH
    INT 21H

MAIN ENDP
END MAIN
